name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  API_KEY: '${{ secrets.API_KEY }}'
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build golib
      run: |
        cd cli
        go build -o libpackageanalyze.so -buildmode=c-shared main.go 
        sudo cp libpackageanalyze.* /usr/lib
        cd ..

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build jheader
      run: javac api_paths/src/main/java/com/spring_rest_api/cli/*.java -h ./cli

    - name: Build clib
      run: sudo g++ -fPIC -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/linux" -shared -o libNetScoreUtil.so cli/com_spring_rest_api_cli_NetScoreUtil.cpp /usr/lib/libpackageanalyze.so

    - name: Write service account key to file
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > accountKey.json
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/accountKey.json

    - name: Build with Maven
      run: mvn package
      working-directory: api_paths

    - name: Build for Docker
      run: |
        docker build -t my-docker-image --build-arg API_KEY=$API_KEY .
        docker run --rm -d -p 8080:8080 --name my-docker-container -v ${PWD}/api_paths/src/main/resources/application.properties:/app/resources/application.properties my-docker-image
        sleep 30

    - name: Verify Spring Boot application
      run: |
        curl http://localhost:8080/
      
    - name: Stop Docker container
      run: docker stop my-docker-container
