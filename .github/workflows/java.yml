name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  TYPE: service_account
  PROJECT_ID: springex-64fb3
  PRIVATE_KEY_ID: 52cdecc6ad8aa02d4b1c462b5084486ddaa04d4b
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  CLIENT_EMAIL: firebase-adminsdk-y6aad@springex-64fb3.iam.gserviceaccount.com
  CLIENT_ID: 105156869469024779989
  AUTH_URI: https://accounts.google.com/o/oauth2/auth
  TOKEN_URI: https://oauth2.googleapis.com/token
  AUTH_PROVIDER_X509_CERT_URL: https://www.googleapis.com/oauth2/v1/certs
  CLIENT_X509_CERT_URL: https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-y6aad%40YOUR_PROJECT_ID.iam.gserviceaccount.com

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Set up Firebase credentials
      run: |
        echo $PRIVATE_KEY | base64 --decode > accountKey.json
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/accountKey.json
        export GOOGLE_CLOUD_PROJECT=$PROJECT_ID

    - name: Replace sensitive information in application.properties
      run: |
        sed "s/\${KEYSTORE_PASSWORD}/${KEYSTORE_PASSWORD}/g" api_paths/src/main/resources/application.properties > api_paths/src/main/resources/application.properties

    - name: Build with Maven
      run: mvn package
      working-directory: api_paths

    - name: Build for Docker
      run: |
        docker build -t my-docker-image .
        docker run --rm -d -p 8080:8080 --name my-docker-container -v ${PWD}/api_paths/src/main/resources/application.properties:/app/resources/application.properties my-docker-image
        sleep 30

    - name: Verify Spring Boot application
      run: |
        curl http://localhost:8080/
      
    - name: Stop Docker container
      run: docker stop my-docker-container
