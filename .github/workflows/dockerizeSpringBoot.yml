name: Containerizing Spring Boot Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  API_KEY: '${{ secrets.API_KEY }}'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Docker login
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and run Docker container
      run: |
        echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 --decode > accountKey.json
        docker build --no-cache -t my-docker-image .
        docker images
        docker run --rm -d -p 8080:8080 --name my-docker-container my-docker-image
        sleep 30

    - name: Verify Spring Boot application
      run: |
        curl http://localhost:8080/

    - name: Stop Docker container
      run: docker stop my-docker-container

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: teamfirestorm-61564

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/teamfirestorm-61564/my-docker-image .
        docker push gcr.io/teamfirestorm-61564/my-docker-image

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy my-service --image gcr.io/teamfirestorm-61564/my-docker-image --region us-central1 --platform managed --allow-unauthenticated
